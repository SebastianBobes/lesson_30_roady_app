# Form implementation generated from reading ui file '.\roady_gui_final.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtGui import QPixmap
from tkinter import *
from tkinter import messagebox
from distance import Distance

from roady import Roady


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(887, 613)
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.departure_city_label = QtWidgets.QLabel(parent=self.centralwidget)
        self.departure_city_label.setGeometry(QtCore.QRect(50, 50, 91, 20))
        self.departure_city_label.setTextFormat(QtCore.Qt.TextFormat.PlainText)
        self.departure_city_label.setObjectName("departure_city_label")
        self.departure_city_lineEdit = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.departure_city_lineEdit.setGeometry(QtCore.QRect(130, 50, 113, 21))
        self.departure_city_lineEdit.setObjectName("departure_city_lineEdit")
        self.label = QtWidgets.QLabel(parent=self.centralwidget)
        self.label.setGeometry(QtCore.QRect(290, 40, 101, 31))
        self.label.setObjectName("label")
        self.destination_city_lineEdit = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.destination_city_lineEdit.setGeometry(QtCore.QRect(390, 50, 113, 21))
        self.destination_city_lineEdit.setObjectName("destination_city_lineEdit")
        self.comboBox = QtWidgets.QComboBox(parent=self.centralwidget)
        self.comboBox.setGeometry(QtCore.QRect(60, 110, 81, 21))
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.label_2 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(180, 110, 61, 21))
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(390, 110, 49, 16))
        self.label_3.setObjectName("label_3")
        self.consum_lineEdit = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.consum_lineEdit.setGeometry(QtCore.QRect(240, 110, 113, 21))
        self.consum_lineEdit.setObjectName("consum_lineEdit")
        self.persoane_lineEdit_2 = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.persoane_lineEdit_2.setGeometry(QtCore.QRect(450, 110, 113, 21))
        self.persoane_lineEdit_2.setObjectName("persoane_lineEdit_2")
        self.radioButton = QtWidgets.QRadioButton(parent=self.centralwidget)
        self.radioButton.setGeometry(QtCore.QRect(610, 110, 89, 20))
        self.radioButton.setObjectName("radioButton")
        self.pushButton = QtWidgets.QPushButton(parent=self.centralwidget)
        self.pushButton.clicked.connect(self.calculate_btn)
        self.pushButton.setGeometry(QtCore.QRect(350, 390, 161, 61))
        self.pushButton.setObjectName("pushButton")
        self.image_label_2 = QtWidgets.QLabel(parent=self.centralwidget)
        self.image_label_2.setGeometry(QtCore.QRect(0, 0, 881, 611))
        self.image_label_2.setText("")
        self.image_label_2.setPixmap(QtGui.QPixmap(":/newPrefix/PycharmProjects/lesson_30/imagine_roady_app3.png"))
        self.image_label_2.setScaledContents(True)
        self.image_label_2.setObjectName("image_label_2")
        self.image_label_2.raise_()
        self.departure_city_label.raise_()
        self.departure_city_lineEdit.raise_()
        self.label.raise_()
        self.destination_city_lineEdit.raise_()
        self.comboBox.raise_()
        self.label_2.raise_()
        self.label_3.raise_()
        self.consum_lineEdit.raise_()
        self.persoane_lineEdit_2.raise_()
        self.radioButton.raise_()
        self.pushButton.raise_()
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 887, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.departure_city_label.setText(_translate("MainWindow", "Departure City"))
        self.label.setText(_translate("MainWindow", "Destination City"))
        self.comboBox.setItemText(0, _translate("MainWindow", "BENZINA"))
        self.comboBox.setItemText(1, _translate("MainWindow", "MOTORINA"))
        self.label_2.setText(_translate("MainWindow", "Consum:"))
        self.label_3.setText(_translate("MainWindow", "Persoane:"))
        self.radioButton.setText(_translate("MainWindow", "Dus/Intos"))
        self.pushButton.setText(_translate("MainWindow", "CALCULATE"))
        qpixmap = QPixmap("imagine_roady_app3.png")
        self.image_label_2.setPixmap(qpixmap)

    def calculate_btn(self):

        departure_city = self.departure_city_lineEdit.text()
        destination_city = self.destination_city_lineEdit.text()
        number_of_persons = self.persoane_lineEdit_2.text()
        fuel_usage = self.consum_lineEdit.text()

        dist = Distance(departure_city,destination_city)
        if dist.km == None:
            messagebox.showerror("ERROR", "VERIFICATI NUMELE ORASELOR!")
            self.departure_city_lineEdit.clear()
            self.destination_city_lineEdit.clear()
            return False

        try:
            number_of_persons = int(self.persoane_lineEdit_2.text())
        except Exception as e:
            messagebox.showerror("ERROR", "Numar de persoane Invalid!Dati un NUMAR!")
            self.persoane_lineEdit_2.clear()
            return False


        else:
            if 1 > number_of_persons or number_of_persons >5:
                messagebox.showerror("ERROR", "Numar de persoane invalid! Trebuie sa apartina intervalului 1,5!")
                self.persoane_lineEdit_2.clear()
                return False



        fuel_type = self.comboBox.currentText().lower()

        try:
            fuel_usage = float(self.consum_lineEdit.text())
        except Exception as e:
            messagebox.showerror("ERROR", "Consumul trebuie sa fie un numar!")
            self.consum_lineEdit.clear()
            return False
        else:
            if 0>fuel_usage or fuel_usage>50:
                messagebox.showerror("ERROR", "Consum invalid!")
                self.consum_lineEdit.clear()
                return False


        roady = Roady(departure_city, destination_city,
                      int(number_of_persons), float(fuel_usage), fuel_type)
        price = roady.calculate_price_per_person()
        if price - int(price) < 0.5:
            price = int(price)
        else:
            price = int(price) +1

        if self.radioButton.isChecked():
            messagebox.showinfo("PRICE:", f"{price * 2}lei" )
        else:
            messagebox.showinfo("PRICE:", f"{price}lei")




if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())

